"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
from math import sqrt


def pentagonal_number(number: int):
    return number * (3 * number - 1) // 2


def is_pentagonal(number: int):
    inverse = (1 + sqrt(1 + 24 * number)) / 6
    return inverse == int(inverse)


result = 0
notFound = True
i = 1
while notFound:
    i += 1
    penta1 = pentagonal_number(i)
    for j in range(i - 1, 0, -1):
        penta2 = pentagonal_number(j)
        if is_pentagonal(penta1 + penta2) and is_pentagonal(penta1 - penta2):
            result = penta1 - penta2
            notFound = False
            break

print(result)
